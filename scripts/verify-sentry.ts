#!/usr/bin/env tsx

/**
 * Script pour v√©rifier la configuration Sentry
 */

function checkSentryConfig() {
  console.log('üîç V√©rification de la configuration Sentry...\n')

  const requiredVars = [
    'NEXT_PUBLIC_SENTRY_DSN',
    'SENTRY_ORG',
    'SENTRY_PROJECT',
  ]

  const optionalVars = ['SENTRY_AUTH_TOKEN']

  let allGood = true

  // V√©rifier les variables requises
  console.log('üìã Variables requises:')
  requiredVars.forEach((varName) => {
    const value = process.env[varName]
    if (value) {
      console.log(`  ‚úÖ ${varName}: ${value.substring(0, 20)}...`)
    } else {
      console.log(`  ‚ùå ${varName}: Non d√©finie`)
      allGood = false
    }
  })

  console.log('\nüìã Variables optionnelles:')
  optionalVars.forEach((varName) => {
    const value = process.env[varName]
    if (value) {
      console.log(`  ‚úÖ ${varName}: D√©finie`)
    } else {
      console.log(`  ‚ö†Ô∏è  ${varName}: Non d√©finie (source maps upload limit√©)`)
    }
  })

  console.log('\nüìÅ Fichiers de configuration:')
  const configFiles = [
    'sentry.client.config.ts',
    'sentry.server.config.ts',
    'sentry.edge.config.ts',
    '.instrumentation.ts',
  ]

  const fs = require('fs')
  const path = require('path')

  configFiles.forEach((file) => {
    const filePath = path.join(process.cwd(), file)
    if (fs.existsSync(filePath)) {
      console.log(`  ‚úÖ ${file}`)
    } else {
      console.log(`  ‚ùå ${file}: Manquant`)
      allGood = false
    }
  })

  console.log('\nüìä R√©sultat:')
  if (allGood) {
    console.log('  ‚úÖ Configuration Sentry compl√®te!')
    console.log('\nüí° Prochaines √©tapes:')
    console.log('  1. Visitez /test-sentry pour tester')
    console.log('  2. V√©rifiez le dashboard Sentry pour les erreurs')
  } else {
    console.log('  ‚ùå Configuration incompl√®te')
    console.log('\nüí° Actions n√©cessaires:')
    console.log('  1. Cr√©ez un projet sur https://sentry.io')
    console.log("  2. Ajoutez les variables d'environnement dans .env.local")
    console.log('  3. Relancez ce script pour v√©rifier')
  }

  return allGood
}

// Ex√©cuter la v√©rification
if (require.main === module) {
  require('dotenv').config({ path: '.env.local' })
  const success = checkSentryConfig()
  process.exit(success ? 0 : 1)
}

export { checkSentryConfig }
