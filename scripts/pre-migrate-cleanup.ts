/**
 * Script de pr√©-migration pour nettoyer les migrations √©chou√©es
 * S'ex√©cute automatiquement avant `prisma migrate deploy`
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function cleanupFailedMigrations() {
  try {
    console.log('üßπ Nettoyage des migrations √©chou√©es...')

    // Supprimer les enregistrements de migrations RNB √©chou√©es
    const result = await prisma.$executeRaw`
      DELETE FROM "_prisma_migrations"
      WHERE migration_name IN ('20250127_add_rnb_models', '20250128_add_rnb_models', '20250128_fix_rnb_migration')
      AND finished_at IS NULL
    `

    console.log(`‚úÖ ${result} migration(s) √©chou√©e(s) nettoy√©e(s)`)
  } catch (error: any) {
    // Ignorer les erreurs (table peut ne pas exister ou migrations d√©j√† nettoy√©es)
    if (error?.code === 'P2021' || error?.code === 'P1001') {
      console.log('‚ÑπÔ∏è  Table _prisma_migrations non accessible ou migrations d√©j√† nettoy√©es')
    } else {
      console.warn('‚ö†Ô∏è  Erreur lors du nettoyage (non bloquant):', error?.message)
    }
  } finally {
    await prisma.$disconnect()
  }
}

cleanupFailedMigrations()

